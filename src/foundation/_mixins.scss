/*=============================================
=            Mixins                           =
=============================================*/

/**
 *
 * Helpful reusable function-like things that will be used to implement
 * styles for components.
 *
*/

@mixin tablet {
  @media(min-width: map.get($breakpoints, 'md')) {
    @content;
  }
}

@mixin laptop {
  @media(min-width: map.get($breakpoints, 'lg')) {
    @content;
  }
}

@mixin desktop {
  @media(min-width: map.get($breakpoints, 'xl')) {
    @content;
  }
}

/*=================================================
               SCSS Debug
@mixin inset-divider-offset($offset, $padding) {
  $divider-offset: (2 * $padding) + $offset;
  @debug "divider offset: #{$divider-offset}";

  margin-left: $divider-offset;
  width: calc(100% - #{$divider-offset});
}
=================================================*/

@mixin padding($space) {
  /* @debug 'padding: #{$space}'; */
  padding: map.get($spacing, $space);
}

.body {
  font-size: 1rem;
  margin-top: 0.5rem;
  padding: 1rem;

  @include tablet() {
    font-size: 0.8rem;
    margin-top: map.get($spacing, xxxs);
  }

  @include laptop() {
    font-size: 1.1rem;
  }

  @include desktop() {
    font-size: 1.2rem;
  }
}
